{
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-games.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-games.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _games = _interopRequireDefault(require(\"../games/games\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _games.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLWdhbWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQSIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9iaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0VXNlck5hbWUgZnJvbSAnLi4vZ2FtZXMvZ2FtZXMnO1xuXG5nZXRVc2VyTmFtZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "brain-games.js"
      ],
      "names": [],
      "mappings": ";;AAAA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "import getUserName from '../games/games';\n\ngetUserName();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587721351254
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/games.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/games.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/games.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/games.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "games.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startGetUserName = () => {\n  console.log('Welcome to the Brain Games!');\n\n  const userName = _readlineSync.default.question('May I have your name? ');\n\n  console.log(`Hello, ${userName}`);\n  return userName;\n};\n\nvar _default = startGetUserName;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVzLmpzIl0sIm5hbWVzIjpbInN0YXJ0R2V0VXNlck5hbWUiLCJjb25zb2xlIiwibG9nIiwidXNlck5hbWUiLCJyZWFkbGluZVN5bmMiLCJxdWVzdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsZ0JBQWdCLEdBQUcsTUFBTTtBQUM3QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNkJBQVo7O0FBQ0EsUUFBTUMsUUFBUSxHQUFHQyxzQkFBYUMsUUFBYixDQUFzQix3QkFBdEIsQ0FBakI7O0FBQ0FKLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLFVBQVNDLFFBQVMsRUFBL0I7QUFDQSxTQUFPQSxRQUFQO0FBQ0QsQ0FMRDs7ZUFPZUgsZ0IiLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMvZ2FtZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmVTeW5jIGZyb20gJ3JlYWRsaW5lLXN5bmMnO1xuXG5jb25zdCBzdGFydEdldFVzZXJOYW1lID0gKCkgPT4ge1xuICBjb25zb2xlLmxvZygnV2VsY29tZSB0byB0aGUgQnJhaW4gR2FtZXMhJyk7XG4gIGNvbnN0IHVzZXJOYW1lID0gcmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdNYXkgSSBoYXZlIHlvdXIgbmFtZT8gJyk7XG4gIGNvbnNvbGUubG9nKGBIZWxsbywgJHt1c2VyTmFtZX1gKTtcbiAgcmV0dXJuIHVzZXJOYW1lO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3RhcnRHZXRVc2VyTmFtZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "games.js"
      ],
      "names": [
        "startGetUserName",
        "console",
        "log",
        "userName",
        "readlineSync",
        "question"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAgB,GAAG,MAAM;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,QAAMC,QAAQ,GAAGC,sBAAaC,QAAb,CAAsB,wBAAtB,CAAjB;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASC,QAAS,EAA/B;AACA,SAAOA,QAAP;AACD,CALD;;eAOeH,gB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\n\nconst startGetUserName = () => {\n  console.log('Welcome to the Brain Games!');\n  const userName = readlineSync.question('May I have your name? ');\n  console.log(`Hello, ${userName}`);\n  return userName;\n};\n\nexport default startGetUserName;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075261633
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-even.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-even.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-even.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-even.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-even.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\"use strict\";\n\nvar _even = _interopRequireDefault(require(\"../games/even\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _even.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLWV2ZW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUNBOzs7O0FBRUEiLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMvYmluIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0IHN0YXJ0Q2hlY2tFdmVuTnVtYmVyIGZyb20gJy4uL2dhbWVzL2V2ZW4nO1xuXG5zdGFydENoZWNrRXZlbk51bWJlcigpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "brain-even.js"
      ],
      "names": [],
      "mappings": "AAAA;;;AACA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "#!/usr/bin/env node\nimport startCheckEvenNumber from '../games/even';\n\nstartCheckEvenNumber();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075184413
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/even.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/even.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/even.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/even.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "even.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startCheckEvenNumber = () => {\n  const gameName = 'brain-even';\n  console.log('Answer \"yes\" if the number is even, otherwise answer \"no\".');\n\n  const getQuestion = () => {\n    const randomNumber = (0, _utils.default)(1000);\n    const gameQuestion = [randomNumber];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    const [randomNumber] = question;\n    const rightAnswer = randomNumber % 2 === 0 ? 'yes' : 'no';\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startCheckEvenNumber;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW4uanMiXSwibmFtZXMiOlsic3RhcnRDaGVja0V2ZW5OdW1iZXIiLCJnYW1lTmFtZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRRdWVzdGlvbiIsInJhbmRvbU51bWJlciIsImdhbWVRdWVzdGlvbiIsImdldFJpZ2h0QW5zd2VyIiwicXVlc3Rpb24iLCJyaWdodEFuc3dlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsb0JBQW9CLEdBQUcsTUFBTTtBQUNqQyxRQUFNQyxRQUFRLEdBQUcsWUFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNERBQVo7O0FBRUEsUUFBTUMsV0FBVyxHQUFHLE1BQU07QUFDeEIsVUFBTUMsWUFBWSxHQUFHLG9CQUFxQixJQUFyQixDQUFyQjtBQUNBLFVBQU1DLFlBQVksR0FBRyxDQUFDRCxZQUFELENBQXJCO0FBQ0EsV0FBT0MsWUFBUDtBQUNELEdBSkQ7O0FBTUEsUUFBTUMsY0FBYyxHQUFJQyxRQUFELElBQWM7QUFDbkMsVUFBTSxDQUFDSCxZQUFELElBQWlCRyxRQUF2QjtBQUNBLFVBQU1DLFdBQVcsR0FBR0osWUFBWSxHQUFHLENBQWYsS0FBcUIsQ0FBckIsR0FBeUIsS0FBekIsR0FBaUMsSUFBckQ7QUFDQSxXQUFPSSxXQUFQO0FBQ0QsR0FKRDs7QUFNQSxzQkFBT1IsUUFBUCxFQUFpQkcsV0FBakIsRUFBOEJHLGNBQTlCO0FBQ0QsQ0FqQkQ7O2VBbUJlUCxvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9nYW1lcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZW5lcmF0ZVJhbmRvbU51bWJlciBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgZW5naW5lIGZyb20gJy4uL2luZGV4JztcblxuY29uc3Qgc3RhcnRDaGVja0V2ZW5OdW1iZXIgPSAoKSA9PiB7XG4gIGNvbnN0IGdhbWVOYW1lID0gJ2JyYWluLWV2ZW4nO1xuICBjb25zb2xlLmxvZygnQW5zd2VyIFwieWVzXCIgaWYgdGhlIG51bWJlciBpcyBldmVuLCBvdGhlcndpc2UgYW5zd2VyIFwibm9cIi4nKTtcblxuICBjb25zdCBnZXRRdWVzdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCByYW5kb21OdW1iZXIgPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigxMDAwKTtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBbcmFuZG9tTnVtYmVyXTtcbiAgICByZXR1cm4gZ2FtZVF1ZXN0aW9uO1xuICB9O1xuXG4gIGNvbnN0IGdldFJpZ2h0QW5zd2VyID0gKHF1ZXN0aW9uKSA9PiB7XG4gICAgY29uc3QgW3JhbmRvbU51bWJlcl0gPSBxdWVzdGlvbjtcbiAgICBjb25zdCByaWdodEFuc3dlciA9IHJhbmRvbU51bWJlciAlIDIgPT09IDAgPyAneWVzJyA6ICdubyc7XG4gICAgcmV0dXJuIHJpZ2h0QW5zd2VyO1xuICB9O1xuXG4gIGVuZ2luZShnYW1lTmFtZSwgZ2V0UXVlc3Rpb24sIGdldFJpZ2h0QW5zd2VyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN0YXJ0Q2hlY2tFdmVuTnVtYmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "even.js"
      ],
      "names": [
        "startCheckEvenNumber",
        "gameName",
        "console",
        "log",
        "getQuestion",
        "randomNumber",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "rightAnswer"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,oBAAoB,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAG,YAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,YAAY,GAAG,oBAAqB,IAArB,CAArB;AACA,UAAMC,YAAY,GAAG,CAACD,YAAD,CAArB;AACA,WAAOC,YAAP;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAM,CAACH,YAAD,IAAiBG,QAAvB;AACA,UAAMC,WAAW,GAAGJ,YAAY,GAAG,CAAf,KAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAArD;AACA,WAAOI,WAAP;AACD,GAJD;;AAMA,sBAAOR,QAAP,EAAiBG,WAAjB,EAA8BG,cAA9B;AACD,CAjBD;;eAmBeP,oB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startCheckEvenNumber = () => {\n  const gameName = 'brain-even';\n  console.log('Answer \"yes\" if the number is even, otherwise answer \"no\".');\n\n  const getQuestion = () => {\n    const randomNumber = generateRandomNumber(1000);\n    const gameQuestion = [randomNumber];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = (question) => {\n    const [randomNumber] = question;\n    const rightAnswer = randomNumber % 2 === 0 ? 'yes' : 'no';\n    return rightAnswer;\n  };\n\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startCheckEvenNumber;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588085994505
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-games.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-games.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-games.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _games = _interopRequireDefault(require(\"../games/games\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _games.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLWdhbWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQSIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9iaW4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0VXNlck5hbWUgZnJvbSAnLi4vZ2FtZXMvZ2FtZXMnO1xuXG5nZXRVc2VyTmFtZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "brain-games.js"
      ],
      "names": [],
      "mappings": ";;AAAA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "import getUserName from '../games/games';\n\ngetUserName();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587721351254
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/even.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/even.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/even.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/even.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "even.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startCheckEvenNumber = () => {\n  const gameName = 'brain-even';\n  console.log('Answer \"yes\" if the number is even, otherwise answer \"no\".');\n\n  const getQuestion = () => {\n    const randomNumber = (0, _utils.default)(1000);\n    const gameQuestion = [randomNumber];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    const [randomNumber] = question;\n    const rightAnswer = randomNumber % 2 === 0 ? 'yes' : 'no';\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startCheckEvenNumber;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW4uanMiXSwibmFtZXMiOlsic3RhcnRDaGVja0V2ZW5OdW1iZXIiLCJnYW1lTmFtZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRRdWVzdGlvbiIsInJhbmRvbU51bWJlciIsImdhbWVRdWVzdGlvbiIsImdldFJpZ2h0QW5zd2VyIiwicXVlc3Rpb24iLCJyaWdodEFuc3dlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsb0JBQW9CLEdBQUcsTUFBTTtBQUNqQyxRQUFNQyxRQUFRLEdBQUcsWUFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNERBQVo7O0FBRUEsUUFBTUMsV0FBVyxHQUFHLE1BQU07QUFDeEIsVUFBTUMsWUFBWSxHQUFHLG9CQUFxQixJQUFyQixDQUFyQjtBQUNBLFVBQU1DLFlBQVksR0FBRyxDQUFDRCxZQUFELENBQXJCO0FBQ0EsV0FBT0MsWUFBUDtBQUNELEdBSkQ7O0FBTUEsUUFBTUMsY0FBYyxHQUFJQyxRQUFELElBQWM7QUFDbkMsVUFBTSxDQUFDSCxZQUFELElBQWlCRyxRQUF2QjtBQUNBLFVBQU1DLFdBQVcsR0FBR0osWUFBWSxHQUFHLENBQWYsS0FBcUIsQ0FBckIsR0FBeUIsS0FBekIsR0FBaUMsSUFBckQ7QUFDQSxXQUFPSSxXQUFQO0FBQ0QsR0FKRDs7QUFNQSxzQkFBT1IsUUFBUCxFQUFpQkcsV0FBakIsRUFBOEJHLGNBQTlCO0FBQ0QsQ0FqQkQ7O2VBbUJlUCxvQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9nYW1lcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZW5lcmF0ZVJhbmRvbU51bWJlciBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgZW5naW5lIGZyb20gJy4uL2luZGV4JztcblxuY29uc3Qgc3RhcnRDaGVja0V2ZW5OdW1iZXIgPSAoKSA9PiB7XG4gIGNvbnN0IGdhbWVOYW1lID0gJ2JyYWluLWV2ZW4nO1xuICBjb25zb2xlLmxvZygnQW5zd2VyIFwieWVzXCIgaWYgdGhlIG51bWJlciBpcyBldmVuLCBvdGhlcndpc2UgYW5zd2VyIFwibm9cIi4nKTtcblxuICBjb25zdCBnZXRRdWVzdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCByYW5kb21OdW1iZXIgPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigxMDAwKTtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBbcmFuZG9tTnVtYmVyXTtcbiAgICByZXR1cm4gZ2FtZVF1ZXN0aW9uO1xuICB9O1xuXG4gIGNvbnN0IGdldFJpZ2h0QW5zd2VyID0gKHF1ZXN0aW9uKSA9PiB7XG4gICAgY29uc3QgW3JhbmRvbU51bWJlcl0gPSBxdWVzdGlvbjtcbiAgICBjb25zdCByaWdodEFuc3dlciA9IHJhbmRvbU51bWJlciAlIDIgPT09IDAgPyAneWVzJyA6ICdubyc7XG4gICAgcmV0dXJuIHJpZ2h0QW5zd2VyO1xuICB9O1xuXG4gIGVuZ2luZShnYW1lTmFtZSwgZ2V0UXVlc3Rpb24sIGdldFJpZ2h0QW5zd2VyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN0YXJ0Q2hlY2tFdmVuTnVtYmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "even.js"
      ],
      "names": [
        "startCheckEvenNumber",
        "gameName",
        "console",
        "log",
        "getQuestion",
        "randomNumber",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "rightAnswer"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,oBAAoB,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAG,YAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,YAAY,GAAG,oBAAqB,IAArB,CAArB;AACA,UAAMC,YAAY,GAAG,CAACD,YAAD,CAArB;AACA,WAAOC,YAAP;AACD,GAJD;;AAMA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAM,CAACH,YAAD,IAAiBG,QAAvB;AACA,UAAMC,WAAW,GAAGJ,YAAY,GAAG,CAAf,KAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAArD;AACA,WAAOI,WAAP;AACD,GAJD;;AAMA,sBAAOR,QAAP,EAAiBG,WAAjB,EAA8BG,cAA9B;AACD,CAjBD;;eAmBeP,oB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startCheckEvenNumber = () => {\n  const gameName = 'brain-even';\n  console.log('Answer \"yes\" if the number is even, otherwise answer \"no\".');\n\n  const getQuestion = () => {\n    const randomNumber = generateRandomNumber(1000);\n    const gameQuestion = [randomNumber];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = (question) => {\n    const [randomNumber] = question;\n    const rightAnswer = randomNumber % 2 === 0 ? 'yes' : 'no';\n    return rightAnswer;\n  };\n\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startCheckEvenNumber;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588085994505
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-calc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-calc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-calc.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-calc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-calc.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\"use strict\";\n\nvar _calc = _interopRequireDefault(require(\"../games/calc\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _calc.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLWNhbGMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUNBOzs7O0FBRUEiLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMvYmluIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0IHN0YXJ0Q2FsY3VsYXRvckdhbWUgZnJvbSAnLi4vZ2FtZXMvY2FsYyc7XG5cbnN0YXJ0Q2FsY3VsYXRvckdhbWUoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "brain-calc.js"
      ],
      "names": [],
      "mappings": "AAAA;;;AACA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "#!/usr/bin/env node\nimport startCalculatorGame from '../games/calc';\n\nstartCalculatorGame();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075301553
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/calc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/calc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/calc.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/calc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "calc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startCalculatorGame = () => {\n  const gameName = 'brain-calc';\n  console.log('What is the result of the expression?');\n  const symbolsArr = ['+', '-', '*'];\n  let randomNumberOne = (0, _utils.default)(100);\n  let randomNumberTwo = (0, _utils.default)(100);\n  const symbolIndex = (0, _utils.default)(3);\n  const gameQuestion = `Question: ${randomNumberOne} ${symbolsArr[symbolIndex]} ${randomNumberTwo}`;\n  let rightAnswer;\n\n  switch (symbolsArr[symbolIndex]) {\n    case '+':\n      rightAnswer = randomNumberOne + randomNumberTwo;\n      break;\n\n    case '-':\n      rightAnswer = randomNumberOne - randomNumberTwo;\n      break;\n\n    case '*':\n      rightAnswer = randomNumberOne * randomNumberTwo;\n      break;\n\n    default:\n      break;\n  }\n\n  (0, _index.default)(gameName, gameQuestion, rightAnswer);\n};\n\nvar _default = startCalculatorGame;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGMuanMiXSwibmFtZXMiOlsic3RhcnRDYWxjdWxhdG9yR2FtZSIsImdhbWVOYW1lIiwiY29uc29sZSIsImxvZyIsInN5bWJvbHNBcnIiLCJyYW5kb21OdW1iZXJPbmUiLCJyYW5kb21OdW1iZXJUd28iLCJzeW1ib2xJbmRleCIsImdhbWVRdWVzdGlvbiIsInJpZ2h0QW5zd2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxtQkFBbUIsR0FBRyxNQUFNO0FBQ2hDLFFBQU1DLFFBQVEsR0FBRyxZQUFqQjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1Q0FBWjtBQUNBLFFBQU1DLFVBQVUsR0FBRyxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUFuQjtBQUNBLE1BQUlDLGVBQWUsR0FBRyxvQkFBcUIsR0FBckIsQ0FBdEI7QUFDQSxNQUFJQyxlQUFlLEdBQUcsb0JBQXFCLEdBQXJCLENBQXRCO0FBQ0EsUUFBTUMsV0FBVyxHQUFHLG9CQUFxQixDQUFyQixDQUFwQjtBQUNBLFFBQU1DLFlBQVksR0FBSyxhQUFZSCxlQUFnQixJQUFHRCxVQUFVLENBQUNHLFdBQUQsQ0FBYyxJQUFHRCxlQUFnQixFQUFqRztBQUNBLE1BQUlHLFdBQUo7O0FBQ0EsVUFBUUwsVUFBVSxDQUFDRyxXQUFELENBQWxCO0FBQ0UsU0FBSyxHQUFMO0FBQ0VFLE1BQUFBLFdBQVcsR0FBR0osZUFBZSxHQUFHQyxlQUFoQztBQUNBOztBQUNGLFNBQUssR0FBTDtBQUNFRyxNQUFBQSxXQUFXLEdBQUdKLGVBQWUsR0FBR0MsZUFBaEM7QUFDQTs7QUFDRixTQUFLLEdBQUw7QUFDRUcsTUFBQUEsV0FBVyxHQUFHSixlQUFlLEdBQUdDLGVBQWhDO0FBQ0E7O0FBQ0Y7QUFDRTtBQVhKOztBQWFBLHNCQUFPTCxRQUFQLEVBQWlCTyxZQUFqQixFQUErQkMsV0FBL0I7QUFDRCxDQXZCRDs7ZUF5QmVULG1CIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjL2dhbWVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdlbmVyYXRlUmFuZG9tTnVtYmVyIGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBlbmdpbmUgZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBzdGFydENhbGN1bGF0b3JHYW1lID0gKCkgPT4ge1xuICBjb25zdCBnYW1lTmFtZSA9ICdicmFpbi1jYWxjJztcbiAgY29uc29sZS5sb2coJ1doYXQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgZXhwcmVzc2lvbj8nKTtcbiAgY29uc3Qgc3ltYm9sc0FyciA9IFsnKycsICctJywgJyonXTtcbiAgbGV0IHJhbmRvbU51bWJlck9uZSA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gIGxldCByYW5kb21OdW1iZXJUd28gPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigxMDApO1xuICBjb25zdCBzeW1ib2xJbmRleCA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDMpO1xuICBjb25zdCBnYW1lUXVlc3Rpb24gPSAoYFF1ZXN0aW9uOiAke3JhbmRvbU51bWJlck9uZX0gJHtzeW1ib2xzQXJyW3N5bWJvbEluZGV4XX0gJHtyYW5kb21OdW1iZXJUd299YCk7XG4gIGxldCByaWdodEFuc3dlcjtcbiAgc3dpdGNoIChzeW1ib2xzQXJyW3N5bWJvbEluZGV4XSkge1xuICAgIGNhc2UgJysnOlxuICAgICAgcmlnaHRBbnN3ZXIgPSByYW5kb21OdW1iZXJPbmUgKyByYW5kb21OdW1iZXJUd287XG4gICAgICBicmVhaztcbiAgICBjYXNlICctJzpcbiAgICAgIHJpZ2h0QW5zd2VyID0gcmFuZG9tTnVtYmVyT25lIC0gcmFuZG9tTnVtYmVyVHdvO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnKic6XG4gICAgICByaWdodEFuc3dlciA9IHJhbmRvbU51bWJlck9uZSAqIHJhbmRvbU51bWJlclR3bztcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBlbmdpbmUoZ2FtZU5hbWUsIGdhbWVRdWVzdGlvbiwgcmlnaHRBbnN3ZXIpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3RhcnRDYWxjdWxhdG9yR2FtZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "calc.js"
      ],
      "names": [
        "startCalculatorGame",
        "gameName",
        "console",
        "log",
        "symbolsArr",
        "randomNumberOne",
        "randomNumberTwo",
        "symbolIndex",
        "gameQuestion",
        "rightAnswer"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAG,YAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;AACA,MAAIC,eAAe,GAAG,oBAAqB,GAArB,CAAtB;AACA,MAAIC,eAAe,GAAG,oBAAqB,GAArB,CAAtB;AACA,QAAMC,WAAW,GAAG,oBAAqB,CAArB,CAApB;AACA,QAAMC,YAAY,GAAK,aAAYH,eAAgB,IAAGD,UAAU,CAACG,WAAD,CAAc,IAAGD,eAAgB,EAAjG;AACA,MAAIG,WAAJ;;AACA,UAAQL,UAAU,CAACG,WAAD,CAAlB;AACE,SAAK,GAAL;AACEE,MAAAA,WAAW,GAAGJ,eAAe,GAAGC,eAAhC;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,WAAW,GAAGJ,eAAe,GAAGC,eAAhC;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,WAAW,GAAGJ,eAAe,GAAGC,eAAhC;AACA;;AACF;AACE;AAXJ;;AAaA,sBAAOL,QAAP,EAAiBO,YAAjB,EAA+BC,WAA/B;AACD,CAvBD;;eAyBeT,mB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startCalculatorGame = () => {\n  const gameName = 'brain-calc';\n  console.log('What is the result of the expression?');\n  const symbolsArr = ['+', '-', '*'];\n  let randomNumberOne = generateRandomNumber(100);\n  let randomNumberTwo = generateRandomNumber(100);\n  const symbolIndex = generateRandomNumber(3);\n  const gameQuestion = (`Question: ${randomNumberOne} ${symbolsArr[symbolIndex]} ${randomNumberTwo}`);\n  let rightAnswer;\n  switch (symbolsArr[symbolIndex]) {\n    case '+':\n      rightAnswer = randomNumberOne + randomNumberTwo;\n      break;\n    case '-':\n      rightAnswer = randomNumberOne - randomNumberTwo;\n      break;\n    case '*':\n      rightAnswer = randomNumberOne * randomNumberTwo;\n      break;\n    default:\n      break;\n  }\n  engine(gameName, gameQuestion, rightAnswer);\n};\n\nexport default startCalculatorGame;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075923277
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// eslint-disable-next-line max-len\nconst generateRandomNumber = maximumRandomNumber => Math.floor(Math.random() * Math.floor(maximumRandomNumber));\n\nvar _default = generateRandomNumber;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlUmFuZG9tTnVtYmVyIiwibWF4aW11bVJhbmRvbU51bWJlciIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsTUFBTUEsb0JBQW9CLEdBQUlDLG1CQUFELElBQXlCQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCRixJQUFJLENBQUNDLEtBQUwsQ0FBV0YsbUJBQVgsQ0FBM0IsQ0FBdEQ7O2VBRWVELG9CIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW5cbmNvbnN0IGdlbmVyYXRlUmFuZG9tTnVtYmVyID0gKG1heGltdW1SYW5kb21OdW1iZXIpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IobWF4aW11bVJhbmRvbU51bWJlcikpO1xuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVJhbmRvbU51bWJlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "generateRandomNumber",
        "maximumRandomNumber",
        "Math",
        "floor",
        "random"
      ],
      "mappings": ";;;;;;;AAAA;AACA,MAAMA,oBAAoB,GAAIC,mBAAD,IAAyBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,mBAAX,CAA3B,CAAtD;;eAEeD,oB",
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "sourcesContent": [
        "// eslint-disable-next-line max-len\nconst generateRandomNumber = (maximumRandomNumber) => Math.floor(Math.random() * Math.floor(maximumRandomNumber));\n\nexport default generateRandomNumber;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588070700932
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/calc.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/calc.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/calc.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/calc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "calc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startCalculatorGame = () => {\n  const gameName = 'brain-calc';\n  console.log('What is the result of the expression?');\n  const symbolsArr = ['+', '-', '*'];\n\n  const getQuestion = () => {\n    const randomNumberOne = (0, _utils.default)(100);\n    const randomNumberTwo = (0, _utils.default)(100);\n    const symbolIndex = (0, _utils.default)(3);\n    const gameQuestion = [randomNumberOne, symbolsArr[symbolIndex], randomNumberTwo];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    const [randomNumberOne, symbol, randomNumberTwo] = question;\n    let rightAnswer;\n\n    switch (symbol) {\n      case '+':\n        rightAnswer = randomNumberOne + randomNumberTwo;\n        break;\n\n      case '-':\n        rightAnswer = randomNumberOne - randomNumberTwo;\n        break;\n\n      case '*':\n        rightAnswer = randomNumberOne * randomNumberTwo;\n        break;\n\n      default:\n        break;\n    }\n\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startCalculatorGame;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGMuanMiXSwibmFtZXMiOlsic3RhcnRDYWxjdWxhdG9yR2FtZSIsImdhbWVOYW1lIiwiY29uc29sZSIsImxvZyIsInN5bWJvbHNBcnIiLCJnZXRRdWVzdGlvbiIsInJhbmRvbU51bWJlck9uZSIsInJhbmRvbU51bWJlclR3byIsInN5bWJvbEluZGV4IiwiZ2FtZVF1ZXN0aW9uIiwiZ2V0UmlnaHRBbnN3ZXIiLCJxdWVzdGlvbiIsInN5bWJvbCIsInJpZ2h0QW5zd2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxtQkFBbUIsR0FBRyxNQUFNO0FBQ2hDLFFBQU1DLFFBQVEsR0FBRyxZQUFqQjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1Q0FBWjtBQUNBLFFBQU1DLFVBQVUsR0FBRyxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUFuQjs7QUFFQSxRQUFNQyxXQUFXLEdBQUcsTUFBTTtBQUN4QixVQUFNQyxlQUFlLEdBQUcsb0JBQXFCLEdBQXJCLENBQXhCO0FBQ0EsVUFBTUMsZUFBZSxHQUFHLG9CQUFxQixHQUFyQixDQUF4QjtBQUNBLFVBQU1DLFdBQVcsR0FBRyxvQkFBcUIsQ0FBckIsQ0FBcEI7QUFDQSxVQUFNQyxZQUFZLEdBQUcsQ0FBQ0gsZUFBRCxFQUFrQkYsVUFBVSxDQUFDSSxXQUFELENBQTVCLEVBQTJDRCxlQUEzQyxDQUFyQjtBQUNBLFdBQU9FLFlBQVA7QUFDRCxHQU5EOztBQVFBLFFBQU1DLGNBQWMsR0FBSUMsUUFBRCxJQUFjO0FBQ25DLFVBQU0sQ0FBQ0wsZUFBRCxFQUFrQk0sTUFBbEIsRUFBMEJMLGVBQTFCLElBQTZDSSxRQUFuRDtBQUNBLFFBQUlFLFdBQUo7O0FBQ0EsWUFBUUQsTUFBUjtBQUNFLFdBQUssR0FBTDtBQUNFQyxRQUFBQSxXQUFXLEdBQUdQLGVBQWUsR0FBR0MsZUFBaEM7QUFDQTs7QUFDRixXQUFLLEdBQUw7QUFDRU0sUUFBQUEsV0FBVyxHQUFHUCxlQUFlLEdBQUdDLGVBQWhDO0FBQ0E7O0FBQ0YsV0FBSyxHQUFMO0FBQ0VNLFFBQUFBLFdBQVcsR0FBR1AsZUFBZSxHQUFHQyxlQUFoQztBQUNBOztBQUNGO0FBQ0U7QUFYSjs7QUFhQSxXQUFPTSxXQUFQO0FBQ0QsR0FqQkQ7O0FBbUJBLHNCQUFPWixRQUFQLEVBQWlCSSxXQUFqQixFQUE4QkssY0FBOUI7QUFDRCxDQWpDRDs7ZUFtQ2VWLG1CIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjL2dhbWVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdlbmVyYXRlUmFuZG9tTnVtYmVyIGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBlbmdpbmUgZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBzdGFydENhbGN1bGF0b3JHYW1lID0gKCkgPT4ge1xuICBjb25zdCBnYW1lTmFtZSA9ICdicmFpbi1jYWxjJztcbiAgY29uc29sZS5sb2coJ1doYXQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgZXhwcmVzc2lvbj8nKTtcbiAgY29uc3Qgc3ltYm9sc0FyciA9IFsnKycsICctJywgJyonXTtcblxuICBjb25zdCBnZXRRdWVzdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCByYW5kb21OdW1iZXJPbmUgPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigxMDApO1xuICAgIGNvbnN0IHJhbmRvbU51bWJlclR3byA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gICAgY29uc3Qgc3ltYm9sSW5kZXggPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigzKTtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBbcmFuZG9tTnVtYmVyT25lLCBzeW1ib2xzQXJyW3N5bWJvbEluZGV4XSwgcmFuZG9tTnVtYmVyVHdvXTtcbiAgICByZXR1cm4gZ2FtZVF1ZXN0aW9uO1xuICB9O1xuXG4gIGNvbnN0IGdldFJpZ2h0QW5zd2VyID0gKHF1ZXN0aW9uKSA9PiB7XG4gICAgY29uc3QgW3JhbmRvbU51bWJlck9uZSwgc3ltYm9sLCByYW5kb21OdW1iZXJUd29dID0gcXVlc3Rpb247XG4gICAgbGV0IHJpZ2h0QW5zd2VyO1xuICAgIHN3aXRjaCAoc3ltYm9sKSB7XG4gICAgICBjYXNlICcrJzpcbiAgICAgICAgcmlnaHRBbnN3ZXIgPSByYW5kb21OdW1iZXJPbmUgKyByYW5kb21OdW1iZXJUd287XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnLSc6XG4gICAgICAgIHJpZ2h0QW5zd2VyID0gcmFuZG9tTnVtYmVyT25lIC0gcmFuZG9tTnVtYmVyVHdvO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJyonOlxuICAgICAgICByaWdodEFuc3dlciA9IHJhbmRvbU51bWJlck9uZSAqIHJhbmRvbU51bWJlclR3bztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIHJpZ2h0QW5zd2VyO1xuICB9O1xuXG4gIGVuZ2luZShnYW1lTmFtZSwgZ2V0UXVlc3Rpb24sIGdldFJpZ2h0QW5zd2VyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN0YXJ0Q2FsY3VsYXRvckdhbWU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "calc.js"
      ],
      "names": [
        "startCalculatorGame",
        "gameName",
        "console",
        "log",
        "symbolsArr",
        "getQuestion",
        "randomNumberOne",
        "randomNumberTwo",
        "symbolIndex",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "symbol",
        "rightAnswer"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAG,YAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,QAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,eAAe,GAAG,oBAAqB,GAArB,CAAxB;AACA,UAAMC,eAAe,GAAG,oBAAqB,GAArB,CAAxB;AACA,UAAMC,WAAW,GAAG,oBAAqB,CAArB,CAApB;AACA,UAAMC,YAAY,GAAG,CAACH,eAAD,EAAkBF,UAAU,CAACI,WAAD,CAA5B,EAA2CD,eAA3C,CAArB;AACA,WAAOE,YAAP;AACD,GAND;;AAQA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAM,CAACL,eAAD,EAAkBM,MAAlB,EAA0BL,eAA1B,IAA6CI,QAAnD;AACA,QAAIE,WAAJ;;AACA,YAAQD,MAAR;AACE,WAAK,GAAL;AACEC,QAAAA,WAAW,GAAGP,eAAe,GAAGC,eAAhC;AACA;;AACF,WAAK,GAAL;AACEM,QAAAA,WAAW,GAAGP,eAAe,GAAGC,eAAhC;AACA;;AACF,WAAK,GAAL;AACEM,QAAAA,WAAW,GAAGP,eAAe,GAAGC,eAAhC;AACA;;AACF;AACE;AAXJ;;AAaA,WAAOM,WAAP;AACD,GAjBD;;AAmBA,sBAAOZ,QAAP,EAAiBI,WAAjB,EAA8BK,cAA9B;AACD,CAjCD;;eAmCeV,mB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startCalculatorGame = () => {\n  const gameName = 'brain-calc';\n  console.log('What is the result of the expression?');\n  const symbolsArr = ['+', '-', '*'];\n\n  const getQuestion = () => {\n    const randomNumberOne = generateRandomNumber(100);\n    const randomNumberTwo = generateRandomNumber(100);\n    const symbolIndex = generateRandomNumber(3);\n    const gameQuestion = [randomNumberOne, symbolsArr[symbolIndex], randomNumberTwo];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = (question) => {\n    const [randomNumberOne, symbol, randomNumberTwo] = question;\n    let rightAnswer;\n    switch (symbol) {\n      case '+':\n        rightAnswer = randomNumberOne + randomNumberTwo;\n        break;\n      case '-':\n        rightAnswer = randomNumberOne - randomNumberTwo;\n        break;\n      case '*':\n        rightAnswer = randomNumberOne * randomNumberTwo;\n        break;\n      default:\n        break;\n    }\n    return rightAnswer;\n  };\n\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startCalculatorGame;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588084869969
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/games.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/games.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/games.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/games.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "games.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startGetUserName = () => {\n  console.log('Welcome to the Brain Games!');\n\n  const userName = _readlineSync.default.question('May I have your name? ');\n\n  console.log(`Hello, ${userName}`);\n  return userName;\n};\n\nvar _default = startGetUserName;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWVzLmpzIl0sIm5hbWVzIjpbInN0YXJ0R2V0VXNlck5hbWUiLCJjb25zb2xlIiwibG9nIiwidXNlck5hbWUiLCJyZWFkbGluZVN5bmMiLCJxdWVzdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsZ0JBQWdCLEdBQUcsTUFBTTtBQUM3QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNkJBQVo7O0FBQ0EsUUFBTUMsUUFBUSxHQUFHQyxzQkFBYUMsUUFBYixDQUFzQix3QkFBdEIsQ0FBakI7O0FBQ0FKLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLFVBQVNDLFFBQVMsRUFBL0I7QUFDQSxTQUFPQSxRQUFQO0FBQ0QsQ0FMRDs7ZUFPZUgsZ0IiLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMvZ2FtZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmVTeW5jIGZyb20gJ3JlYWRsaW5lLXN5bmMnO1xuXG5jb25zdCBzdGFydEdldFVzZXJOYW1lID0gKCkgPT4ge1xuICBjb25zb2xlLmxvZygnV2VsY29tZSB0byB0aGUgQnJhaW4gR2FtZXMhJyk7XG4gIGNvbnN0IHVzZXJOYW1lID0gcmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdNYXkgSSBoYXZlIHlvdXIgbmFtZT8gJyk7XG4gIGNvbnNvbGUubG9nKGBIZWxsbywgJHt1c2VyTmFtZX1gKTtcbiAgcmV0dXJuIHVzZXJOYW1lO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3RhcnRHZXRVc2VyTmFtZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "games.js"
      ],
      "names": [
        "startGetUserName",
        "console",
        "log",
        "userName",
        "readlineSync",
        "question"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAgB,GAAG,MAAM;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,QAAMC,QAAQ,GAAGC,sBAAaC,QAAb,CAAsB,wBAAtB,CAAjB;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASC,QAAS,EAA/B;AACA,SAAOA,QAAP;AACD,CALD;;eAOeH,gB",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\n\nconst startGetUserName = () => {\n  console.log('Welcome to the Brain Games!');\n  const userName = readlineSync.question('May I have your name? ');\n  console.log(`Hello, ${userName}`);\n  return userName;\n};\n\nexport default startGetUserName;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075261633
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// eslint-disable-next-line max-len\nconst generateRandomNumber = maximumRandomNumber => Math.floor(Math.random() * Math.floor(maximumRandomNumber));\n\nvar _default = generateRandomNumber;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlUmFuZG9tTnVtYmVyIiwibWF4aW11bVJhbmRvbU51bWJlciIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0EsTUFBTUEsb0JBQW9CLEdBQUlDLG1CQUFELElBQXlCQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCRixJQUFJLENBQUNDLEtBQUwsQ0FBV0YsbUJBQVgsQ0FBM0IsQ0FBdEQ7O2VBRWVELG9CIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW5cbmNvbnN0IGdlbmVyYXRlUmFuZG9tTnVtYmVyID0gKG1heGltdW1SYW5kb21OdW1iZXIpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IobWF4aW11bVJhbmRvbU51bWJlcikpO1xuXG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVJhbmRvbU51bWJlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "generateRandomNumber",
        "maximumRandomNumber",
        "Math",
        "floor",
        "random"
      ],
      "mappings": ";;;;;;;AAAA;AACA,MAAMA,oBAAoB,GAAIC,mBAAD,IAAyBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,mBAAX,CAA3B,CAAtD;;eAEeD,oB",
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "sourcesContent": [
        "// eslint-disable-next-line max-len\nconst generateRandomNumber = (maximumRandomNumber) => Math.floor(Math.random() * Math.floor(maximumRandomNumber));\n\nexport default generateRandomNumber;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588070700932
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _games = _interopRequireDefault(require(\"./games/games\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst engine = (gameName, getQuestion, getRightAnswer) => {\n  const userName = (0, _games.default)();\n  console.log(gameName);\n\n  for (let i = 0; i < 3; i += 1) {\n    const gameQuestion = getQuestion();\n    console.log(`Question: ${gameQuestion.join(' ')}`);\n    const gameAnswer = getRightAnswer(gameQuestion);\n\n    const answer = _readlineSync.default.question('Your answer: ');\n\n    if (gameAnswer === parseInt(answer, 10)) {\n      console.log('Correct!');\n    } else {\n      console.log(`\"${answer}\" is wrong answer ;(. Correct answer was \"${gameAnswer}\".`);\n      console.log(`Let's try again, ${userName}!`);\n      return;\n    }\n  }\n\n  console.log(`Congratulations, ${userName}`);\n};\n\nvar _default = engine;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImVuZ2luZSIsImdhbWVOYW1lIiwiZ2V0UXVlc3Rpb24iLCJnZXRSaWdodEFuc3dlciIsInVzZXJOYW1lIiwiY29uc29sZSIsImxvZyIsImkiLCJnYW1lUXVlc3Rpb24iLCJqb2luIiwiZ2FtZUFuc3dlciIsImFuc3dlciIsInJlYWRsaW5lU3luYyIsInF1ZXN0aW9uIiwicGFyc2VJbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLE1BQU1BLE1BQU0sR0FBRyxDQUFDQyxRQUFELEVBQVdDLFdBQVgsRUFBd0JDLGNBQXhCLEtBQTJDO0FBQ3hELFFBQU1DLFFBQVEsR0FBRyxxQkFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLFFBQVo7O0FBQ0EsT0FBSyxJQUFJTSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLEVBQXVCQSxDQUFDLElBQUksQ0FBNUIsRUFBK0I7QUFDN0IsVUFBTUMsWUFBWSxHQUFHTixXQUFXLEVBQWhDO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGFBQVlFLFlBQVksQ0FBQ0MsSUFBYixDQUFrQixHQUFsQixDQUF1QixFQUFoRDtBQUNBLFVBQU1DLFVBQVUsR0FBR1AsY0FBYyxDQUFDSyxZQUFELENBQWpDOztBQUNBLFVBQU1HLE1BQU0sR0FBR0Msc0JBQWFDLFFBQWIsQ0FBc0IsZUFBdEIsQ0FBZjs7QUFDQSxRQUFJSCxVQUFVLEtBQUtJLFFBQVEsQ0FBQ0gsTUFBRCxFQUFTLEVBQVQsQ0FBM0IsRUFBeUM7QUFDdkNOLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVo7QUFDRCxLQUZELE1BRU87QUFDTEQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsSUFBR0ssTUFBTyw2Q0FBNENELFVBQVcsSUFBOUU7QUFDQUwsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsb0JBQW1CRixRQUFTLEdBQXpDO0FBQ0E7QUFDRDtBQUNGOztBQUNEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxvQkFBbUJGLFFBQVMsRUFBekM7QUFDRCxDQWpCRDs7ZUFtQmVKLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmVTeW5jIGZyb20gJ3JlYWRsaW5lLXN5bmMnO1xuaW1wb3J0IGdldFVzZXJOYW1lIGZyb20gJy4vZ2FtZXMvZ2FtZXMnO1xuXG5jb25zdCBlbmdpbmUgPSAoZ2FtZU5hbWUsIGdldFF1ZXN0aW9uLCBnZXRSaWdodEFuc3dlcikgPT4ge1xuICBjb25zdCB1c2VyTmFtZSA9IGdldFVzZXJOYW1lKCk7XG4gIGNvbnNvbGUubG9nKGdhbWVOYW1lKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBnZXRRdWVzdGlvbigpO1xuICAgIGNvbnNvbGUubG9nKGBRdWVzdGlvbjogJHtnYW1lUXVlc3Rpb24uam9pbignICcpfWApO1xuICAgIGNvbnN0IGdhbWVBbnN3ZXIgPSBnZXRSaWdodEFuc3dlcihnYW1lUXVlc3Rpb24pO1xuICAgIGNvbnN0IGFuc3dlciA9IHJlYWRsaW5lU3luYy5xdWVzdGlvbignWW91ciBhbnN3ZXI6ICcpO1xuICAgIGlmIChnYW1lQW5zd2VyID09PSBwYXJzZUludChhbnN3ZXIsIDEwKSkge1xuICAgICAgY29uc29sZS5sb2coJ0NvcnJlY3QhJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKGBcIiR7YW5zd2VyfVwiIGlzIHdyb25nIGFuc3dlciA7KC4gQ29ycmVjdCBhbnN3ZXIgd2FzIFwiJHtnYW1lQW5zd2VyfVwiLmApO1xuICAgICAgY29uc29sZS5sb2coYExldCdzIHRyeSBhZ2FpbiwgJHt1c2VyTmFtZX0hYCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGNvbnNvbGUubG9nKGBDb25ncmF0dWxhdGlvbnMsICR7dXNlck5hbWV9YCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBlbmdpbmU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "engine",
        "gameName",
        "getQuestion",
        "getRightAnswer",
        "userName",
        "console",
        "log",
        "i",
        "gameQuestion",
        "join",
        "gameAnswer",
        "answer",
        "readlineSync",
        "question",
        "parseInt"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,KAA2C;AACxD,QAAMC,QAAQ,GAAG,qBAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAMC,YAAY,GAAGN,WAAW,EAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYE,YAAY,CAACC,IAAb,CAAkB,GAAlB,CAAuB,EAAhD;AACA,UAAMC,UAAU,GAAGP,cAAc,CAACK,YAAD,CAAjC;;AACA,UAAMG,MAAM,GAAGC,sBAAaC,QAAb,CAAsB,eAAtB,CAAf;;AACA,QAAIH,UAAU,KAAKI,QAAQ,CAACH,MAAD,EAAS,EAAT,CAA3B,EAAyC;AACvCN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAa,IAAGK,MAAO,6CAA4CD,UAAW,IAA9E;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBF,QAAS,GAAzC;AACA;AACD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBF,QAAS,EAAzC;AACD,CAjBD;;eAmBeJ,M",
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\nimport getUserName from './games/games';\n\nconst engine = (gameName, getQuestion, getRightAnswer) => {\n  const userName = getUserName();\n  console.log(gameName);\n  for (let i = 0; i < 3; i += 1) {\n    const gameQuestion = getQuestion();\n    console.log(`Question: ${gameQuestion.join(' ')}`);\n    const gameAnswer = getRightAnswer(gameQuestion);\n    const answer = readlineSync.question('Your answer: ');\n    if (gameAnswer === parseInt(answer, 10)) {\n      console.log('Correct!');\n    } else {\n      console.log(`\"${answer}\" is wrong answer ;(. Correct answer was \"${gameAnswer}\".`);\n      console.log(`Let's try again, ${userName}!`);\n      return;\n    }\n  }\n  console.log(`Congratulations, ${userName}`);\n};\n\nexport default engine;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588104205493
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _games = _interopRequireDefault(require(\"./games/games\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst engine = (gameName, getQuestion, getRightAnswer) => {\n  const userName = (0, _games.default)();\n  console.log(gameName);\n\n  for (let i = 0; i < 3; i += 1) {\n    const gameQuestion = getQuestion();\n    console.log(`Question: ${gameQuestion.join(' ')}`);\n    const gameAnswer = getRightAnswer(gameQuestion);\n\n    const answer = _readlineSync.default.question('Your answer: ');\n\n    if (gameAnswer === parseInt(answer, 10)) {\n      console.log('Correct!');\n    } else {\n      console.log(`\"${answer}\" is wrong answer ;(. Correct answer was \"${gameAnswer}\".`);\n      console.log(`Let's try again, ${userName}!`);\n      return;\n    }\n  }\n\n  console.log(`Congratulations, ${userName}`);\n};\n\nvar _default = engine;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImVuZ2luZSIsImdhbWVOYW1lIiwiZ2V0UXVlc3Rpb24iLCJnZXRSaWdodEFuc3dlciIsInVzZXJOYW1lIiwiY29uc29sZSIsImxvZyIsImkiLCJnYW1lUXVlc3Rpb24iLCJqb2luIiwiZ2FtZUFuc3dlciIsImFuc3dlciIsInJlYWRsaW5lU3luYyIsInF1ZXN0aW9uIiwicGFyc2VJbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLE1BQU1BLE1BQU0sR0FBRyxDQUFDQyxRQUFELEVBQVdDLFdBQVgsRUFBd0JDLGNBQXhCLEtBQTJDO0FBQ3hELFFBQU1DLFFBQVEsR0FBRyxxQkFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLFFBQVo7O0FBQ0EsT0FBSyxJQUFJTSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHLENBQXBCLEVBQXVCQSxDQUFDLElBQUksQ0FBNUIsRUFBK0I7QUFDN0IsVUFBTUMsWUFBWSxHQUFHTixXQUFXLEVBQWhDO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLGFBQVlFLFlBQVksQ0FBQ0MsSUFBYixDQUFrQixHQUFsQixDQUF1QixFQUFoRDtBQUNBLFVBQU1DLFVBQVUsR0FBR1AsY0FBYyxDQUFDSyxZQUFELENBQWpDOztBQUNBLFVBQU1HLE1BQU0sR0FBR0Msc0JBQWFDLFFBQWIsQ0FBc0IsZUFBdEIsQ0FBZjs7QUFDQSxRQUFJSCxVQUFVLEtBQUtJLFFBQVEsQ0FBQ0gsTUFBRCxFQUFTLEVBQVQsQ0FBM0IsRUFBeUM7QUFDdkNOLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVo7QUFDRCxLQUZELE1BRU87QUFDTEQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsSUFBR0ssTUFBTyw2Q0FBNENELFVBQVcsSUFBOUU7QUFDQUwsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsb0JBQW1CRixRQUFTLEdBQXpDO0FBQ0E7QUFDRDtBQUNGOztBQUNEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxvQkFBbUJGLFFBQVMsRUFBekM7QUFDRCxDQWpCRDs7ZUFtQmVKLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvdmxhZGltaXIvcHJvamVjdC1icmFpbi1nYW1lcy9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmVTeW5jIGZyb20gJ3JlYWRsaW5lLXN5bmMnO1xuaW1wb3J0IGdldFVzZXJOYW1lIGZyb20gJy4vZ2FtZXMvZ2FtZXMnO1xuXG5jb25zdCBlbmdpbmUgPSAoZ2FtZU5hbWUsIGdldFF1ZXN0aW9uLCBnZXRSaWdodEFuc3dlcikgPT4ge1xuICBjb25zdCB1c2VyTmFtZSA9IGdldFVzZXJOYW1lKCk7XG4gIGNvbnNvbGUubG9nKGdhbWVOYW1lKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpICs9IDEpIHtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBnZXRRdWVzdGlvbigpO1xuICAgIGNvbnNvbGUubG9nKGBRdWVzdGlvbjogJHtnYW1lUXVlc3Rpb24uam9pbignICcpfWApO1xuICAgIGNvbnN0IGdhbWVBbnN3ZXIgPSBnZXRSaWdodEFuc3dlcihnYW1lUXVlc3Rpb24pO1xuICAgIGNvbnN0IGFuc3dlciA9IHJlYWRsaW5lU3luYy5xdWVzdGlvbignWW91ciBhbnN3ZXI6ICcpO1xuICAgIGlmIChnYW1lQW5zd2VyID09PSBwYXJzZUludChhbnN3ZXIsIDEwKSkge1xuICAgICAgY29uc29sZS5sb2coJ0NvcnJlY3QhJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKGBcIiR7YW5zd2VyfVwiIGlzIHdyb25nIGFuc3dlciA7KC4gQ29ycmVjdCBhbnN3ZXIgd2FzIFwiJHtnYW1lQW5zd2VyfVwiLmApO1xuICAgICAgY29uc29sZS5sb2coYExldCdzIHRyeSBhZ2FpbiwgJHt1c2VyTmFtZX0hYCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGNvbnNvbGUubG9nKGBDb25ncmF0dWxhdGlvbnMsICR7dXNlck5hbWV9YCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBlbmdpbmU7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "engine",
        "gameName",
        "getQuestion",
        "getRightAnswer",
        "userName",
        "console",
        "log",
        "i",
        "gameQuestion",
        "join",
        "gameAnswer",
        "answer",
        "readlineSync",
        "question",
        "parseInt"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,MAAM,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,KAA2C;AACxD,QAAMC,QAAQ,GAAG,qBAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAMC,YAAY,GAAGN,WAAW,EAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYE,YAAY,CAACC,IAAb,CAAkB,GAAlB,CAAuB,EAAhD;AACA,UAAMC,UAAU,GAAGP,cAAc,CAACK,YAAD,CAAjC;;AACA,UAAMG,MAAM,GAAGC,sBAAaC,QAAb,CAAsB,eAAtB,CAAf;;AACA,QAAIH,UAAU,KAAKI,QAAQ,CAACH,MAAD,EAAS,EAAT,CAA3B,EAAyC;AACvCN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAa,IAAGK,MAAO,6CAA4CD,UAAW,IAA9E;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBF,QAAS,GAAzC;AACA;AACD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBF,QAAS,EAAzC;AACD,CAjBD;;eAmBeJ,M",
      "sourceRoot": "/home/vladimir/project-brain-games/src",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\nimport getUserName from './games/games';\n\nconst engine = (gameName, getQuestion, getRightAnswer) => {\n  const userName = getUserName();\n  console.log(gameName);\n  for (let i = 0; i < 3; i += 1) {\n    const gameQuestion = getQuestion();\n    console.log(`Question: ${gameQuestion.join(' ')}`);\n    const gameAnswer = getRightAnswer(gameQuestion);\n    const answer = readlineSync.question('Your answer: ');\n    if (gameAnswer === parseInt(answer, 10)) {\n      console.log('Correct!');\n    } else {\n      console.log(`\"${answer}\" is wrong answer ;(. Correct answer was \"${gameAnswer}\".`);\n      console.log(`Let's try again, ${userName}!`);\n      return;\n    }\n  }\n  console.log(`Congratulations, ${userName}`);\n};\n\nexport default engine;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588104205493
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-gcd.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-gcd.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-gcd.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-gcd.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-gcd.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\"use strict\";\n\nvar _gcd = _interopRequireDefault(require(\"../games/gcd\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _gcd.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLWdjZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBQ0E7Ozs7QUFFQSIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9iaW4iLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgc3RhcnRHcmVhdGVzdENvbW1vbkRpdmlzb3JHYW1lIGZyb20gJy4uL2dhbWVzL2djZCc7XG5cbnN0YXJ0R3JlYXRlc3RDb21tb25EaXZpc29yR2FtZSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "brain-gcd.js"
      ],
      "names": [],
      "mappings": "AAAA;;;AACA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "#!/usr/bin/env node\nimport startGreatestCommonDivisorGame from '../games/gcd';\n\nstartGreatestCommonDivisorGame();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075301553
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/gcd.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/gcd.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/gcd.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/gcd.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "gcd.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startGreatestCommonDivisorGame = () => {\n  const gameName = 'brain-gcd';\n  console.log('Find the greatest common divisor of given numbers.');\n\n  const getQuestion = () => {\n    const randomNumberOne = (0, _utils.default)(100);\n    const randomNumberTwo = (0, _utils.default)(100);\n    const gameQuestion = [randomNumberOne, randomNumberTwo];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    const [randomNumberOne, randomNumberTwo] = question;\n    let rightAnswer = 2;\n\n    for (let count = randomNumberOne; count > 0; count -= 1) {\n      if (randomNumberOne % count === 0 && randomNumberTwo % count === 0) {\n        rightAnswer = count;\n        break;\n      } else {\n        rightAnswer = 0;\n      }\n    }\n\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startGreatestCommonDivisorGame;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdjZC5qcyJdLCJuYW1lcyI6WyJzdGFydEdyZWF0ZXN0Q29tbW9uRGl2aXNvckdhbWUiLCJnYW1lTmFtZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRRdWVzdGlvbiIsInJhbmRvbU51bWJlck9uZSIsInJhbmRvbU51bWJlclR3byIsImdhbWVRdWVzdGlvbiIsImdldFJpZ2h0QW5zd2VyIiwicXVlc3Rpb24iLCJyaWdodEFuc3dlciIsImNvdW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSw4QkFBOEIsR0FBRyxNQUFNO0FBQzNDLFFBQU1DLFFBQVEsR0FBRyxXQUFqQjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvREFBWjs7QUFDQSxRQUFNQyxXQUFXLEdBQUcsTUFBTTtBQUN4QixVQUFNQyxlQUFlLEdBQUcsb0JBQXFCLEdBQXJCLENBQXhCO0FBQ0EsVUFBTUMsZUFBZSxHQUFHLG9CQUFxQixHQUFyQixDQUF4QjtBQUNBLFVBQU1DLFlBQVksR0FBRyxDQUFDRixlQUFELEVBQWtCQyxlQUFsQixDQUFyQjtBQUNBLFdBQU9DLFlBQVA7QUFDRCxHQUxEOztBQU9BLFFBQU1DLGNBQWMsR0FBSUMsUUFBRCxJQUFjO0FBQ25DLFVBQU0sQ0FBQ0osZUFBRCxFQUFrQkMsZUFBbEIsSUFBcUNHLFFBQTNDO0FBQ0EsUUFBSUMsV0FBVyxHQUFHLENBQWxCOztBQUNBLFNBQUssSUFBSUMsS0FBSyxHQUFHTixlQUFqQixFQUFrQ00sS0FBSyxHQUFHLENBQTFDLEVBQTZDQSxLQUFLLElBQUksQ0FBdEQsRUFBeUQ7QUFDdkQsVUFBSU4sZUFBZSxHQUFHTSxLQUFsQixLQUE0QixDQUE1QixJQUFpQ0wsZUFBZSxHQUFHSyxLQUFsQixLQUE0QixDQUFqRSxFQUFvRTtBQUNsRUQsUUFBQUEsV0FBVyxHQUFHQyxLQUFkO0FBQ0E7QUFDRCxPQUhELE1BR087QUFDTEQsUUFBQUEsV0FBVyxHQUFHLENBQWQ7QUFDRDtBQUNGOztBQUNELFdBQU9BLFdBQVA7QUFDRCxHQVpEOztBQWNBLHNCQUFPVCxRQUFQLEVBQWlCRyxXQUFqQixFQUE4QkksY0FBOUI7QUFDRCxDQXpCRDs7ZUEyQmVSLDhCIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjL2dhbWVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdlbmVyYXRlUmFuZG9tTnVtYmVyIGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBlbmdpbmUgZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBzdGFydEdyZWF0ZXN0Q29tbW9uRGl2aXNvckdhbWUgPSAoKSA9PiB7XG4gIGNvbnN0IGdhbWVOYW1lID0gJ2JyYWluLWdjZCc7XG4gIGNvbnNvbGUubG9nKCdGaW5kIHRoZSBncmVhdGVzdCBjb21tb24gZGl2aXNvciBvZiBnaXZlbiBudW1iZXJzLicpO1xuICBjb25zdCBnZXRRdWVzdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCByYW5kb21OdW1iZXJPbmUgPSBnZW5lcmF0ZVJhbmRvbU51bWJlcigxMDApO1xuICAgIGNvbnN0IHJhbmRvbU51bWJlclR3byA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gICAgY29uc3QgZ2FtZVF1ZXN0aW9uID0gW3JhbmRvbU51bWJlck9uZSwgcmFuZG9tTnVtYmVyVHdvXTtcbiAgICByZXR1cm4gZ2FtZVF1ZXN0aW9uO1xuICB9O1xuXG4gIGNvbnN0IGdldFJpZ2h0QW5zd2VyID0gKHF1ZXN0aW9uKSA9PiB7XG4gICAgY29uc3QgW3JhbmRvbU51bWJlck9uZSwgcmFuZG9tTnVtYmVyVHdvXSA9IHF1ZXN0aW9uO1xuICAgIGxldCByaWdodEFuc3dlciA9IDI7XG4gICAgZm9yIChsZXQgY291bnQgPSByYW5kb21OdW1iZXJPbmU7IGNvdW50ID4gMDsgY291bnQgLT0gMSkge1xuICAgICAgaWYgKHJhbmRvbU51bWJlck9uZSAlIGNvdW50ID09PSAwICYmIHJhbmRvbU51bWJlclR3byAlIGNvdW50ID09PSAwKSB7XG4gICAgICAgIHJpZ2h0QW5zd2VyID0gY291bnQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmlnaHRBbnN3ZXIgPSAwO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmlnaHRBbnN3ZXI7XG4gIH07XG5cbiAgZW5naW5lKGdhbWVOYW1lLCBnZXRRdWVzdGlvbiwgZ2V0UmlnaHRBbnN3ZXIpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3RhcnRHcmVhdGVzdENvbW1vbkRpdmlzb3JHYW1lO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gcd.js"
      ],
      "names": [
        "startGreatestCommonDivisorGame",
        "gameName",
        "console",
        "log",
        "getQuestion",
        "randomNumberOne",
        "randomNumberTwo",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "rightAnswer",
        "count"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,8BAA8B,GAAG,MAAM;AAC3C,QAAMC,QAAQ,GAAG,WAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,eAAe,GAAG,oBAAqB,GAArB,CAAxB;AACA,UAAMC,eAAe,GAAG,oBAAqB,GAArB,CAAxB;AACA,UAAMC,YAAY,GAAG,CAACF,eAAD,EAAkBC,eAAlB,CAArB;AACA,WAAOC,YAAP;AACD,GALD;;AAOA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,UAAM,CAACJ,eAAD,EAAkBC,eAAlB,IAAqCG,QAA3C;AACA,QAAIC,WAAW,GAAG,CAAlB;;AACA,SAAK,IAAIC,KAAK,GAAGN,eAAjB,EAAkCM,KAAK,GAAG,CAA1C,EAA6CA,KAAK,IAAI,CAAtD,EAAyD;AACvD,UAAIN,eAAe,GAAGM,KAAlB,KAA4B,CAA5B,IAAiCL,eAAe,GAAGK,KAAlB,KAA4B,CAAjE,EAAoE;AAClED,QAAAA,WAAW,GAAGC,KAAd;AACA;AACD,OAHD,MAGO;AACLD,QAAAA,WAAW,GAAG,CAAd;AACD;AACF;;AACD,WAAOA,WAAP;AACD,GAZD;;AAcA,sBAAOT,QAAP,EAAiBG,WAAjB,EAA8BI,cAA9B;AACD,CAzBD;;eA2BeR,8B",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startGreatestCommonDivisorGame = () => {\n  const gameName = 'brain-gcd';\n  console.log('Find the greatest common divisor of given numbers.');\n  const getQuestion = () => {\n    const randomNumberOne = generateRandomNumber(100);\n    const randomNumberTwo = generateRandomNumber(100);\n    const gameQuestion = [randomNumberOne, randomNumberTwo];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = (question) => {\n    const [randomNumberOne, randomNumberTwo] = question;\n    let rightAnswer = 2;\n    for (let count = randomNumberOne; count > 0; count -= 1) {\n      if (randomNumberOne % count === 0 && randomNumberTwo % count === 0) {\n        rightAnswer = count;\n        break;\n      } else {\n        rightAnswer = 0;\n      }\n    }\n    return rightAnswer;\n  };\n\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startGreatestCommonDivisorGame;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588104604181
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/bin\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/bin/brain-progression.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/bin/brain-progression.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/bin/brain-progression.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/bin/brain-progression.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
        "sourceFileName": "brain-progression.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\"use strict\";\n\nvar _progression = _interopRequireDefault(require(\"../games/progression\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _progression.default)();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyYWluLXByb2dyZXNzaW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFDQTs7OztBQUVBIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjL2JpbiIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCBzdGFydEFyaXRobWV0aWNQcm9ncmVzc2lvbiBmcm9tICcuLi9nYW1lcy9wcm9ncmVzc2lvbic7XG5cbnN0YXJ0QXJpdGhtZXRpY1Byb2dyZXNzaW9uKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "brain-progression.js"
      ],
      "names": [],
      "mappings": "AAAA;;;AACA;;;;AAEA",
      "sourceRoot": "/home/vladimir/project-brain-games/src/bin",
      "sourcesContent": [
        "#!/usr/bin/env node\nimport startArithmeticProgression from '../games/progression';\n\nstartArithmeticProgression();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588075301553
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/progression.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/progression.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/progression.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/progression.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "progression.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startArithmeticProgression = () => {\n  const gameName = 'brain-progression';\n  console.log('What number is missing in the progression?');\n\n  const getQuestion = () => {\n    const numberChangeProgression = (0, _utils.default)(100);\n    const indexProgression = (0, _utils.default)(10);\n    const resultArithmeticProgression = [];\n    const gameQuestion = [numberChangeProgression, indexProgression, resultArithmeticProgression];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    let startNumberProgression = (0, _utils.default)(100);\n    let rightAnswer = 0;\n    const [numberChangeProgression, indexProgression, resultArithmeticProgression] = question;\n\n    for (let count = 1; count < 10; count += 1) {\n      startNumberProgression += numberChangeProgression;\n      resultArithmeticProgression.push(startNumberProgression);\n    }\n\n    rightAnswer = resultArithmeticProgression[indexProgression];\n    resultArithmeticProgression[indexProgression] = '..';\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startArithmeticProgression;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzaW9uLmpzIl0sIm5hbWVzIjpbInN0YXJ0QXJpdGhtZXRpY1Byb2dyZXNzaW9uIiwiZ2FtZU5hbWUiLCJjb25zb2xlIiwibG9nIiwiZ2V0UXVlc3Rpb24iLCJudW1iZXJDaGFuZ2VQcm9ncmVzc2lvbiIsImluZGV4UHJvZ3Jlc3Npb24iLCJyZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb24iLCJnYW1lUXVlc3Rpb24iLCJnZXRSaWdodEFuc3dlciIsInF1ZXN0aW9uIiwic3RhcnROdW1iZXJQcm9ncmVzc2lvbiIsInJpZ2h0QW5zd2VyIiwiY291bnQiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSwwQkFBMEIsR0FBRyxNQUFNO0FBQ3ZDLFFBQU1DLFFBQVEsR0FBRyxtQkFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNENBQVo7O0FBQ0EsUUFBTUMsV0FBVyxHQUFHLE1BQU07QUFDeEIsVUFBTUMsdUJBQXVCLEdBQUcsb0JBQXFCLEdBQXJCLENBQWhDO0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUcsb0JBQXFCLEVBQXJCLENBQXpCO0FBQ0EsVUFBTUMsMkJBQTJCLEdBQUcsRUFBcEM7QUFDQSxVQUFNQyxZQUFZLEdBQUcsQ0FBQ0gsdUJBQUQsRUFBMEJDLGdCQUExQixFQUE0Q0MsMkJBQTVDLENBQXJCO0FBQ0EsV0FBT0MsWUFBUDtBQUNELEdBTkQ7O0FBT0EsUUFBTUMsY0FBYyxHQUFJQyxRQUFELElBQWM7QUFDbkMsUUFBSUMsc0JBQXNCLEdBQUcsb0JBQXFCLEdBQXJCLENBQTdCO0FBQ0EsUUFBSUMsV0FBVyxHQUFHLENBQWxCO0FBQ0EsVUFBTSxDQUFDUCx1QkFBRCxFQUEwQkMsZ0JBQTFCLEVBQTRDQywyQkFBNUMsSUFBMkVHLFFBQWpGOztBQUNBLFNBQUssSUFBSUcsS0FBSyxHQUFHLENBQWpCLEVBQW9CQSxLQUFLLEdBQUcsRUFBNUIsRUFBZ0NBLEtBQUssSUFBSSxDQUF6QyxFQUE0QztBQUMxQ0YsTUFBQUEsc0JBQXNCLElBQUlOLHVCQUExQjtBQUNBRSxNQUFBQSwyQkFBMkIsQ0FBQ08sSUFBNUIsQ0FBaUNILHNCQUFqQztBQUNEOztBQUNEQyxJQUFBQSxXQUFXLEdBQUdMLDJCQUEyQixDQUFDRCxnQkFBRCxDQUF6QztBQUNBQyxJQUFBQSwyQkFBMkIsQ0FBQ0QsZ0JBQUQsQ0FBM0IsR0FBZ0QsSUFBaEQ7QUFDQSxXQUFPTSxXQUFQO0FBQ0QsR0FYRDs7QUFZQSxzQkFBT1gsUUFBUCxFQUFpQkcsV0FBakIsRUFBOEJLLGNBQTlCO0FBQ0QsQ0F2QkQ7O2VBeUJlVCwwQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92bGFkaW1pci9wcm9qZWN0LWJyYWluLWdhbWVzL3NyYy9nYW1lcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBnZW5lcmF0ZVJhbmRvbU51bWJlciBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgZW5naW5lIGZyb20gJy4uL2luZGV4JztcblxuY29uc3Qgc3RhcnRBcml0aG1ldGljUHJvZ3Jlc3Npb24gPSAoKSA9PiB7XG4gIGNvbnN0IGdhbWVOYW1lID0gJ2JyYWluLXByb2dyZXNzaW9uJztcbiAgY29uc29sZS5sb2coJ1doYXQgbnVtYmVyIGlzIG1pc3NpbmcgaW4gdGhlIHByb2dyZXNzaW9uPycpO1xuICBjb25zdCBnZXRRdWVzdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCBudW1iZXJDaGFuZ2VQcm9ncmVzc2lvbiA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gICAgY29uc3QgaW5kZXhQcm9ncmVzc2lvbiA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwKTtcbiAgICBjb25zdCByZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb24gPSBbXTtcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBbbnVtYmVyQ2hhbmdlUHJvZ3Jlc3Npb24sIGluZGV4UHJvZ3Jlc3Npb24sIHJlc3VsdEFyaXRobWV0aWNQcm9ncmVzc2lvbl07XG4gICAgcmV0dXJuIGdhbWVRdWVzdGlvbjtcbiAgfTtcbiAgY29uc3QgZ2V0UmlnaHRBbnN3ZXIgPSAocXVlc3Rpb24pID0+IHtcbiAgICBsZXQgc3RhcnROdW1iZXJQcm9ncmVzc2lvbiA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gICAgbGV0IHJpZ2h0QW5zd2VyID0gMDtcbiAgICBjb25zdCBbbnVtYmVyQ2hhbmdlUHJvZ3Jlc3Npb24sIGluZGV4UHJvZ3Jlc3Npb24sIHJlc3VsdEFyaXRobWV0aWNQcm9ncmVzc2lvbl0gPSBxdWVzdGlvbjtcbiAgICBmb3IgKGxldCBjb3VudCA9IDE7IGNvdW50IDwgMTA7IGNvdW50ICs9IDEpIHtcbiAgICAgIHN0YXJ0TnVtYmVyUHJvZ3Jlc3Npb24gKz0gbnVtYmVyQ2hhbmdlUHJvZ3Jlc3Npb247XG4gICAgICByZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb24ucHVzaChzdGFydE51bWJlclByb2dyZXNzaW9uKTtcbiAgICB9XG4gICAgcmlnaHRBbnN3ZXIgPSByZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb25baW5kZXhQcm9ncmVzc2lvbl07XG4gICAgcmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uW2luZGV4UHJvZ3Jlc3Npb25dID0gJy4uJztcbiAgICByZXR1cm4gcmlnaHRBbnN3ZXI7XG4gIH07XG4gIGVuZ2luZShnYW1lTmFtZSwgZ2V0UXVlc3Rpb24sIGdldFJpZ2h0QW5zd2VyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHN0YXJ0QXJpdGhtZXRpY1Byb2dyZXNzaW9uO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "progression.js"
      ],
      "names": [
        "startArithmeticProgression",
        "gameName",
        "console",
        "log",
        "getQuestion",
        "numberChangeProgression",
        "indexProgression",
        "resultArithmeticProgression",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "startNumberProgression",
        "rightAnswer",
        "count",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,0BAA0B,GAAG,MAAM;AACvC,QAAMC,QAAQ,GAAG,mBAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,uBAAuB,GAAG,oBAAqB,GAArB,CAAhC;AACA,UAAMC,gBAAgB,GAAG,oBAAqB,EAArB,CAAzB;AACA,UAAMC,2BAA2B,GAAG,EAApC;AACA,UAAMC,YAAY,GAAG,CAACH,uBAAD,EAA0BC,gBAA1B,EAA4CC,2BAA5C,CAArB;AACA,WAAOC,YAAP;AACD,GAND;;AAOA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,QAAIC,sBAAsB,GAAG,oBAAqB,GAArB,CAA7B;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,UAAM,CAACP,uBAAD,EAA0BC,gBAA1B,EAA4CC,2BAA5C,IAA2EG,QAAjF;;AACA,SAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,IAAI,CAAzC,EAA4C;AAC1CF,MAAAA,sBAAsB,IAAIN,uBAA1B;AACAE,MAAAA,2BAA2B,CAACO,IAA5B,CAAiCH,sBAAjC;AACD;;AACDC,IAAAA,WAAW,GAAGL,2BAA2B,CAACD,gBAAD,CAAzC;AACAC,IAAAA,2BAA2B,CAACD,gBAAD,CAA3B,GAAgD,IAAhD;AACA,WAAOM,WAAP;AACD,GAXD;;AAYA,sBAAOX,QAAP,EAAiBG,WAAjB,EAA8BK,cAA9B;AACD,CAvBD;;eAyBeT,0B",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startArithmeticProgression = () => {\n  const gameName = 'brain-progression';\n  console.log('What number is missing in the progression?');\n  const getQuestion = () => {\n    const numberChangeProgression = generateRandomNumber(100);\n    const indexProgression = generateRandomNumber(10);\n    const resultArithmeticProgression = [];\n    const gameQuestion = [numberChangeProgression, indexProgression, resultArithmeticProgression];\n    return gameQuestion;\n  };\n  const getRightAnswer = (question) => {\n    let startNumberProgression = generateRandomNumber(100);\n    let rightAnswer = 0;\n    const [numberChangeProgression, indexProgression, resultArithmeticProgression] = question;\n    for (let count = 1; count < 10; count += 1) {\n      startNumberProgression += numberChangeProgression;\n      resultArithmeticProgression.push(startNumberProgression);\n    }\n    rightAnswer = resultArithmeticProgression[indexProgression];\n    resultArithmeticProgression[indexProgression] = '..';\n    return rightAnswer;\n  };\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startArithmeticProgression;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588106089105
  },
  "{\"sourceRoot\":\"/home/vladimir/project-brain-games/src/games\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vladimir/project-brain-games\",\"filename\":\"/home/vladimir/project-brain-games/src/games/progression.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vladimir/project-brain-games\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vladimir/project-brain-games",
      "filename": "/home/vladimir/project-brain-games/src/games/progression.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vladimir/project-brain-games",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vladimir/project-brain-games/src/games/progression.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vladimir/project-brain-games/src/games/progression.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vladimir/project-brain-games/src/games",
        "sourceFileName": "progression.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"../utils\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst startArithmeticProgression = () => {\n  const gameName = 'brain-progression';\n  console.log('What number is missing in the progression?');\n\n  const getQuestion = () => {\n    let startNumberProgression = (0, _utils.default)(100);\n    const numberChangeProgression = (0, _utils.default)(100);\n    const indexProgression = (0, _utils.default)(10);\n    const resultArithmeticProgression = [];\n\n    for (let count = 1; count < 10; count += 1) {\n      startNumberProgression += numberChangeProgression;\n      resultArithmeticProgression.push(startNumberProgression);\n    }\n\n    resultArithmeticProgression[indexProgression] = '..';\n    const gameQuestion = [resultArithmeticProgression, indexProgression];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = question => {\n    let rightAnswer = 0;\n    const [resultArithmeticProgression, indexProgression] = question;\n    rightAnswer = resultArithmeticProgression[indexProgression];\n    return rightAnswer;\n  };\n\n  (0, _index.default)(gameName, getQuestion, getRightAnswer);\n};\n\nvar _default = startArithmeticProgression;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2dyZXNzaW9uLmpzIl0sIm5hbWVzIjpbInN0YXJ0QXJpdGhtZXRpY1Byb2dyZXNzaW9uIiwiZ2FtZU5hbWUiLCJjb25zb2xlIiwibG9nIiwiZ2V0UXVlc3Rpb24iLCJzdGFydE51bWJlclByb2dyZXNzaW9uIiwibnVtYmVyQ2hhbmdlUHJvZ3Jlc3Npb24iLCJpbmRleFByb2dyZXNzaW9uIiwicmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uIiwiY291bnQiLCJwdXNoIiwiZ2FtZVF1ZXN0aW9uIiwiZ2V0UmlnaHRBbnN3ZXIiLCJxdWVzdGlvbiIsInJpZ2h0QW5zd2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSwwQkFBMEIsR0FBRyxNQUFNO0FBQ3ZDLFFBQU1DLFFBQVEsR0FBRyxtQkFBakI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNENBQVo7O0FBQ0EsUUFBTUMsV0FBVyxHQUFHLE1BQU07QUFDeEIsUUFBSUMsc0JBQXNCLEdBQUcsb0JBQXFCLEdBQXJCLENBQTdCO0FBQ0EsVUFBTUMsdUJBQXVCLEdBQUcsb0JBQXFCLEdBQXJCLENBQWhDO0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUcsb0JBQXFCLEVBQXJCLENBQXpCO0FBQ0EsVUFBTUMsMkJBQTJCLEdBQUcsRUFBcEM7O0FBQ0EsU0FBSyxJQUFJQyxLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBRyxFQUE1QixFQUFnQ0EsS0FBSyxJQUFJLENBQXpDLEVBQTRDO0FBQzFDSixNQUFBQSxzQkFBc0IsSUFBSUMsdUJBQTFCO0FBQ0FFLE1BQUFBLDJCQUEyQixDQUFDRSxJQUE1QixDQUFpQ0wsc0JBQWpDO0FBQ0Q7O0FBQ0RHLElBQUFBLDJCQUEyQixDQUFDRCxnQkFBRCxDQUEzQixHQUFnRCxJQUFoRDtBQUNBLFVBQU1JLFlBQVksR0FBRyxDQUFDSCwyQkFBRCxFQUE4QkQsZ0JBQTlCLENBQXJCO0FBQ0EsV0FBT0ksWUFBUDtBQUNELEdBWkQ7O0FBY0EsUUFBTUMsY0FBYyxHQUFJQyxRQUFELElBQWM7QUFDbkMsUUFBSUMsV0FBVyxHQUFHLENBQWxCO0FBQ0EsVUFBTSxDQUFDTiwyQkFBRCxFQUE4QkQsZ0JBQTlCLElBQWtETSxRQUF4RDtBQUNBQyxJQUFBQSxXQUFXLEdBQUdOLDJCQUEyQixDQUFDRCxnQkFBRCxDQUF6QztBQUNBLFdBQU9PLFdBQVA7QUFDRCxHQUxEOztBQU1BLHNCQUFPYixRQUFQLEVBQWlCRyxXQUFqQixFQUE4QlEsY0FBOUI7QUFDRCxDQXhCRDs7ZUEwQmVaLDBCIiwic291cmNlUm9vdCI6Ii9ob21lL3ZsYWRpbWlyL3Byb2plY3QtYnJhaW4tZ2FtZXMvc3JjL2dhbWVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdlbmVyYXRlUmFuZG9tTnVtYmVyIGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBlbmdpbmUgZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBzdGFydEFyaXRobWV0aWNQcm9ncmVzc2lvbiA9ICgpID0+IHtcbiAgY29uc3QgZ2FtZU5hbWUgPSAnYnJhaW4tcHJvZ3Jlc3Npb24nO1xuICBjb25zb2xlLmxvZygnV2hhdCBudW1iZXIgaXMgbWlzc2luZyBpbiB0aGUgcHJvZ3Jlc3Npb24/Jyk7XG4gIGNvbnN0IGdldFF1ZXN0aW9uID0gKCkgPT4ge1xuICAgIGxldCBzdGFydE51bWJlclByb2dyZXNzaW9uID0gZ2VuZXJhdGVSYW5kb21OdW1iZXIoMTAwKTtcbiAgICBjb25zdCBudW1iZXJDaGFuZ2VQcm9ncmVzc2lvbiA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwMCk7XG4gICAgY29uc3QgaW5kZXhQcm9ncmVzc2lvbiA9IGdlbmVyYXRlUmFuZG9tTnVtYmVyKDEwKTtcbiAgICBjb25zdCByZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb24gPSBbXTtcbiAgICBmb3IgKGxldCBjb3VudCA9IDE7IGNvdW50IDwgMTA7IGNvdW50ICs9IDEpIHtcbiAgICAgIHN0YXJ0TnVtYmVyUHJvZ3Jlc3Npb24gKz0gbnVtYmVyQ2hhbmdlUHJvZ3Jlc3Npb247XG4gICAgICByZXN1bHRBcml0aG1ldGljUHJvZ3Jlc3Npb24ucHVzaChzdGFydE51bWJlclByb2dyZXNzaW9uKTtcbiAgICB9XG4gICAgcmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uW2luZGV4UHJvZ3Jlc3Npb25dID0gJy4uJztcbiAgICBjb25zdCBnYW1lUXVlc3Rpb24gPSBbcmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uLCBpbmRleFByb2dyZXNzaW9uXTtcbiAgICByZXR1cm4gZ2FtZVF1ZXN0aW9uO1xuICB9O1xuXG4gIGNvbnN0IGdldFJpZ2h0QW5zd2VyID0gKHF1ZXN0aW9uKSA9PiB7XG4gICAgbGV0IHJpZ2h0QW5zd2VyID0gMDtcbiAgICBjb25zdCBbcmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uLCBpbmRleFByb2dyZXNzaW9uXSA9IHF1ZXN0aW9uO1xuICAgIHJpZ2h0QW5zd2VyID0gcmVzdWx0QXJpdGhtZXRpY1Byb2dyZXNzaW9uW2luZGV4UHJvZ3Jlc3Npb25dO1xuICAgIHJldHVybiByaWdodEFuc3dlcjtcbiAgfTtcbiAgZW5naW5lKGdhbWVOYW1lLCBnZXRRdWVzdGlvbiwgZ2V0UmlnaHRBbnN3ZXIpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgc3RhcnRBcml0aG1ldGljUHJvZ3Jlc3Npb247XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "progression.js"
      ],
      "names": [
        "startArithmeticProgression",
        "gameName",
        "console",
        "log",
        "getQuestion",
        "startNumberProgression",
        "numberChangeProgression",
        "indexProgression",
        "resultArithmeticProgression",
        "count",
        "push",
        "gameQuestion",
        "getRightAnswer",
        "question",
        "rightAnswer"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,0BAA0B,GAAG,MAAM;AACvC,QAAMC,QAAQ,GAAG,mBAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,sBAAsB,GAAG,oBAAqB,GAArB,CAA7B;AACA,UAAMC,uBAAuB,GAAG,oBAAqB,GAArB,CAAhC;AACA,UAAMC,gBAAgB,GAAG,oBAAqB,EAArB,CAAzB;AACA,UAAMC,2BAA2B,GAAG,EAApC;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,IAAI,CAAzC,EAA4C;AAC1CJ,MAAAA,sBAAsB,IAAIC,uBAA1B;AACAE,MAAAA,2BAA2B,CAACE,IAA5B,CAAiCL,sBAAjC;AACD;;AACDG,IAAAA,2BAA2B,CAACD,gBAAD,CAA3B,GAAgD,IAAhD;AACA,UAAMI,YAAY,GAAG,CAACH,2BAAD,EAA8BD,gBAA9B,CAArB;AACA,WAAOI,YAAP;AACD,GAZD;;AAcA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC,QAAIC,WAAW,GAAG,CAAlB;AACA,UAAM,CAACN,2BAAD,EAA8BD,gBAA9B,IAAkDM,QAAxD;AACAC,IAAAA,WAAW,GAAGN,2BAA2B,CAACD,gBAAD,CAAzC;AACA,WAAOO,WAAP;AACD,GALD;;AAMA,sBAAOb,QAAP,EAAiBG,WAAjB,EAA8BQ,cAA9B;AACD,CAxBD;;eA0BeZ,0B",
      "sourceRoot": "/home/vladimir/project-brain-games/src/games",
      "sourcesContent": [
        "import generateRandomNumber from '../utils';\nimport engine from '../index';\n\nconst startArithmeticProgression = () => {\n  const gameName = 'brain-progression';\n  console.log('What number is missing in the progression?');\n  const getQuestion = () => {\n    let startNumberProgression = generateRandomNumber(100);\n    const numberChangeProgression = generateRandomNumber(100);\n    const indexProgression = generateRandomNumber(10);\n    const resultArithmeticProgression = [];\n    for (let count = 1; count < 10; count += 1) {\n      startNumberProgression += numberChangeProgression;\n      resultArithmeticProgression.push(startNumberProgression);\n    }\n    resultArithmeticProgression[indexProgression] = '..';\n    const gameQuestion = [resultArithmeticProgression, indexProgression];\n    return gameQuestion;\n  };\n\n  const getRightAnswer = (question) => {\n    let rightAnswer = 0;\n    const [resultArithmeticProgression, indexProgression] = question;\n    rightAnswer = resultArithmeticProgression[indexProgression];\n    return rightAnswer;\n  };\n  engine(gameName, getQuestion, getRightAnswer);\n};\n\nexport default startArithmeticProgression;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588107090745
  }
}